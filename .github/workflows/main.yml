name: Pipeline CI
run-name: Pipeline CI executada por ${{ github.actor }}

on:
  workflow_dispatch:

jobs:
  Microservicos:
    name: Teste de integração dos microserviços
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checagem do repositório
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Instalação do Docker Compose e cliente PostgreSQL
      - name: Instalação do Docker Compose e PostgreSQL Client
        run: sudo apt-get update && sudo apt-get install -y docker-compose postgresql-client

      # Inicialização do Banco de dados PostgreSQL (orders)
      - name: Build do Banco de dados orders
        working-directory: app-orders
        run: docker-compose up -d --build

      # Inicialização do Banco de dados PostgreSQL (invoices)
      - name: Build do Banco de dados invoices
        working-directory: app-invoices
        run: docker-compose up -d --build

      # Subir serviços de mensageria e observabilidade (RabbitMQ, Kong, Jaeger)
      - name: Build e Start do docker-compose de mensageria e observabilidade
        run: docker-compose -f docker-compose.yml up -d --build

      # Aguardando inicialização dos serviços de mensageria, API-Gateway e logs
      - name: Aguardando serviços de mensageria e observabilidade
        run: |
          echo "Esperando RabbitMQ iniciar..."
          until nc -z localhost 5672; do sleep 2; done
          echo "Esperando Kong iniciar..."
          until nc -z localhost 8001; do sleep 2; done
          echo "Esperando Jaeger iniciar..."
          sleep 5

      # Rodar migrations do app-orders dentro do container
      - name: Rodar migrations app-orders
        working-directory: app-orders
        run: |
          docker-compose run --rm --entrypoint "" \
            -e DATABASE_URL="postgresql://docker:docker@pg:5432/orders" \
            app-orders npm exec -- drizzle-kit generate && npm exec -- drizzle-kit migrate

      # Rodar migrations do app-invoices dentro do container
      - name: Rodar migrations app-invoices
        working-directory: app-invoices
        run: |
          docker-compose run --rm --entrypoint "" \
            -e DATABASE_URL="postgresql://docker:docker@pg:5433/invoices" \
            app-invoices npm exec -- drizzle-kit generate && npm exec -- drizzle-kit migrate

      # Rodar servidor app-orders e testar endpoint
      - name: Execução do servidor app-orders
        working-directory: app-orders
        run: |
          docker-compose run --rm -d app-orders sh -c "npx tsc && node ./dist/src/server.js"
          sleep 5
          for i in {1..8}; do
            curl -s -X POST http://localhost:8000 \
              -H "Content-Type: application/json" \
              -d '{"amount": 4}' || exit 1
          done

      # Limpar containers
      - name: Stop do serviço docker-compose
        run: docker-compose down