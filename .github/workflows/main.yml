name: Pipeline CI
run-name: Pipeline CI executada por ${{ github.actor }}

on:
  workflow_dispatch:

jobs:
  Integracao:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Instalação do Docker Compose
      - name: Instalação do Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      # Subir serviços base (RabbitMQ, Kong, Jaeger)
      - name: Build e Start docker-compose
        run: docker-compose up -d --build

      - name: Aguardando inicialização dos serviços base
        run: |
          echo "Esperando RabbitMQ iniciar..."
          until nc -z localhost 5672; do sleep 2; done
          echo "Esperando Kong iniciar..."
          until nc -z localhost 8001; do sleep 2; done
          echo "Esperando Jaeger iniciar..."
          sleep 5

      # Build da imagem app-orders
      - name: Build app-orders
        working-directory: app-orders
        run: docker build -t app-orders .

      # Rodar migrations do app-orders
      - name: Rodar migrations app-orders
        working-directory: app-orders
        run: |
          docker run --rm \
            -e DATABASE_URL="postgres://user:password@host:5432/dbname" \
            -e OTEL_SERVICE_NAME="app-orders" \
            app-orders sh -c "npx drizzle-kit generate && npx drizzle-kit migrate"

      # Build e migrations do app-invoices
      - name: Build app-invoices
        working-directory: app-invoices
        run: docker build -t app-invoices .

      - name: Rodar migrations app-invoices
        working-directory: app-invoices
        run: |
          docker run --rm \
            -e DATABASE_URL="postgres://review:Passw0rd2023!@host.docker.internal:5432/review" \
            -e OTEL_SERVICE_NAME="app-invoices" \
            app-invoices sh -c "npx drizzle-kit generate && npx drizzle-kit migrate"

      # Rodar servidor app-orders e testar endpoint
      - name: Execução do servidor app-orders
        working-directory: app-orders
        run: |
          npx tsc
          node ./dist/src/server.js &
          SERVER_PID=$!
          sleep 5
          for i in {1..8}; do
            curl -s -X POST http://localhost:3000 \
              -H "Content-Type: application/json" \
              -d '{"amount": 4}' || exit 1
          done
          kill $SERVER_PID

      # Limpar containers
      - name: Stop do serviço do docker-compose
        run: docker-compose down